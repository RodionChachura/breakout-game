{"version":3,"sources":["utils.js","game/levels.js","game/vector.js","game/core.js","components/block.js","components/paddle.js","components/ball.js","components/level.js","components/lives.js","components/scene.js","App.js","components/page.js","serviceWorker.js","index.js"],"names":["getRange","length","Object","toConsumableArray","Array","keys","getRandomFrom","_len","arguments","args","_key","Math","floor","random","registerListener","eventName","handler","window","addEventListener","removeEventListener","getRandomBlock","getBlocks","rows","columns","map","LEVELS","lives","paddleWidth","speed","blocks","Vector","x","y","classCallCheck","this","_ref","_ref2","number","hypot","scaleBy","_ref3","other","amt","dotProduct","normal","subtract","projectOn","degrees","radians","PI","toRadians","cos","sin","_ref4","atan2","crossProduct","MOVEMENT","LEFT","RIGHT","DOWN","UP","LEFT_UP","add","normalize","RIGHT_UP","getInitialPaddleAndBall","width","height","paddleY","paddle","position","ball","center","BALL_RADIUS","radius","direction","isInBoundaries","oneSide","otherSide","oneBoundary","otherBoundary","getNewGameState","state","movement","timespan","size","distance","withNewX","objectSpread","getNewPaddle","oldDirection","newBallCenter","ballBottom","withNewBallProps","props","withNewBallDirection","vector","minAngle","undefined","angle","angleBetween","maxAngle","rotate","getAdjustedVector","distortionLevel","getComponent","distortion","getDistortedDirection","reflect","ballLeft","ballRight","ballTop","paddleLeft","paddleRight","paddleTop","abs","array","element","block","find","density","newBlock","filter","e","oldElement","newElement","updateElement","blockTop","blockBottom","blockLeft","getNewBallNormal","colors","i","concat","components_block","react_default","a","createElement","className","fill","components_paddle","components_ball","cx","cy","r","components_level","level","unit","fontSize","components_lives","containerWidth","rx","key","MOVEMENT_KEYS","getProjectors","containerSize","gameSize","widthRatio","heightRatio","unitOnScreen","min","projectDistance","projectVector","initialStates","arrays","blocksStart","rowsOfBlocks","row","j","reduce","acc","ACTION","HANDLER","_HANDLER","defineProperty","game","includes","newState","stopTime","time","Date","now","newGame","localStorage","setItem","reducer","type","payload","getInitialState","inState","getItem","parseInt","getInitialLevel","_getProjectors","scene","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","act","_state$game","_state$game$size","useEffect","timerId","setInterval","unregisterKeydown","which","unregisterKeyup","clearInterval","viewWidth","assign","Page","svgElement","useRef","_useState","useState","_useState2","setSize","onResize","_svgElement$current$g","current","getBoundingClientRect","unregisterResizeListener","ref","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9095fe34.chunk.js","sourcesContent":["export const toDegrees = radians => (radians * 180) / Math.PI\nexport const toRadians = degrees => (degrees * Math.PI) / 180\n\nexport const getRange = length => [...Array(length).keys()]\nexport const getRandomFrom = (...args) => args[Math.floor(Math.random() * args.length)]\nexport const flatten = arrays => arrays.reduce((acc, row) => [...acc, ...row], [])\nexport const withoutElement = (array, element) => array.filter(e => e !== element)\nexport const updateElement = (array, oldElement, newElement) => array.map(e => e === oldElement ? newElement : e)\n\nexport const registerListener = (eventName, handler) => {\n  window.addEventListener(eventName, handler)\n  return () => window.removeEventListener(eventName, handler)\n}","import { getRange } from '../utils'\n\nexport const BLOCK_MAX_DENSITY = 3\n\nconst getRandomBlock = () => Math.floor(Math.random() * BLOCK_MAX_DENSITY)\n\nconst getBlocks = (rows, columns) =>\n  getRange(columns).map(() => getRange(rows).map(getRandomBlock))\n\nexport const LEVELS = [\n  {\n    lives: 5,\n    paddleWidth: 3.5,\n    speed: 1,\n    blocks: getBlocks(6, 3)\n  },\n  {\n    lives: 4,\n    paddleWidth: 3,\n    speed: 1.4,\n    blocks: getBlocks(7, 4)\n  },\n  {\n    lives: 3,\n    paddleWidth: 2.5,\n    speed: 1.8,\n    blocks: getBlocks(8, 5)\n  },\n  {\n    lives: 3,\n    paddleWidth: 2,\n    speed: 2.2,\n    blocks: getBlocks(9, 6)\n  },\n]","import { toDegrees, toRadians } from '../utils'\n\nexport default class Vector {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  add({ x, y }) {\n    return new Vector(this.x + x, this.y + y)\n  }\n\n  subtract({ x, y }) {\n    return new Vector(this.x - x, this.y - y)\n  }\n\n  scaleBy(number) {\n    return new Vector(this.x * number, this.y * number);\n  }\n\n  length() {\n    return Math.hypot(this.x, this.y)\n  }\n\n  normalize() {\n    return this.scaleBy(1 / this.length())\n  }\n\n  dotProduct({ x, y }) {\n    return this.x * x + this.y * y\n  }\n\n  projectOn(other) {\n    const amt = this.dotProduct(other) / other.length()\n    return new Vector(amt * other.x, amt * other.y)\n  }\n\n  reflect(normal) {\n    return this.subtract(this.projectOn(normal).scaleBy(2))\n  }\n\n  rotate(degrees) {\n    const radians = toRadians(degrees)\n    const cos = Math.cos(radians)\n    const sin = Math.sin(radians)\n\n    return new Vector(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos\n    )\n  }\n\n  crossProduct({ x, y }) {\n    return this.x * y - x * this.y\n  }\n\n  angleBetween(other) {\n    return toDegrees(\n      Math.atan2(this.crossProduct(other), this.dotProduct(other))\n    )\n  }\n}","import Vector from './vector'\nimport { flatten, withoutElement, updateElement, getRandomFrom } from '../utils'\n\nconst PADDLE_AREA = 1 / 3\nconst BLOCK_HEIGHT = 1 / 3\nconst PADDLE_HEIGHT = BLOCK_HEIGHT\nconst BALL_RADIUS = 1 / 5\nconst DISTANCE_IN_MS = 0.005\n\nexport const MOVEMENT = {\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT'\n}\n\nconst LEFT = new Vector(-1, 0)\nconst RIGHT = new Vector(1, 0)\nconst DOWN = new Vector(0, 1)\nconst UP = new Vector(0, -1)\n\nconst LEFT_UP = LEFT.add(UP).normalize()\nconst RIGHT_UP = RIGHT.add(UP).normalize()\n\nexport const getInitialPaddleAndBall = (width, height, paddleWidth) => {\n  const paddleY = height - PADDLE_HEIGHT\n  const paddle = {\n    position: new Vector((width - paddleWidth) / 2, paddleY),\n    width: paddleWidth,\n    height: PADDLE_HEIGHT\n  }\n  const ball = {\n    center: new Vector(height / 2, paddleY - BALL_RADIUS * 2),\n    radius: BALL_RADIUS,\n    direction: getRandomFrom(LEFT_UP, RIGHT_UP)\n  }\n\n  return {\n    paddle,\n    ball\n  }\n}\n\nexport const getGameStateFromLevel = ({ lives, paddleWidth, speed, blocks }) => {\n  const width = blocks[0].length\n  const height = width\n\n  const blocksStart = ((height - height * PADDLE_AREA) - blocks.length * BLOCK_HEIGHT) / 2\n\n  const rowsOfBlocks = blocks.map((row, i) =>\n    row.map((density, j) => ({\n      density,\n      position: new Vector(j, blocksStart + (i * BLOCK_HEIGHT)),\n      width: 1,\n      height: BLOCK_HEIGHT\n    })\n  ))\n\n  const size = {\n    width,\n    height\n  }\n  return {\n    size,\n    blocks: flatten(rowsOfBlocks),\n    ...getInitialPaddleAndBall(width, height, paddleWidth),\n    lives,\n    speed\n  }\n}\n\nconst getDistortedDirection = (vector, distortionLevel = 0.3) => {\n  const getComponent = () => Math.random() * distortionLevel - distortionLevel / 2\n  const distortion = new Vector(getComponent(), getComponent())\n  return vector.add(distortion).normalize()\n}\n\nconst getNewPaddle = (paddle, size, distance, movement) => {\n  if (!movement) return paddle\n  const direction = movement === MOVEMENT.LEFT ? LEFT : RIGHT\n\n  const { x } = paddle.position.add(direction.scaleBy(distance))\n  const withNewX = x => ({\n    ...paddle,\n    position: new Vector(x, paddle.position.y)\n  })\n  if (x < 0) {\n    return withNewX(0)\n  }\n  if (x + paddle.width > size.width) {\n    return withNewX(size.width - paddle.width)\n  }\n  return withNewX(x)\n}\n\nconst isInBoundaries = (oneSide, otherSide, oneBoundary, otherBoundary) => (\n  (oneSide >= oneBoundary && oneSide <= otherBoundary) ||\n  (otherSide >= oneBoundary && otherSide <= otherBoundary)\n)\n\nconst getAdjustedVector = (normal, vector, minAngle = 15) => {\n  const angle = normal.angleBetween(vector)\n  const maxAngle = 90 - minAngle\n  if (angle < 0) {\n    if (angle > -minAngle) {\n      return normal.rotate(-minAngle)\n    }\n    if (angle < -maxAngle) {\n      return normal.rotate(-maxAngle)\n    }\n  } else {\n    if (angle < minAngle) {\n      return normal.rotate(minAngle)\n    }\n    if (angle > maxAngle) {\n      return normal.rotate(maxAngle)\n    }\n  }\n  return vector\n}\n\nexport const getNewGameState = (state, movement, timespan) => {\n  const { size, speed, lives } = state\n  const distance = timespan * DISTANCE_IN_MS * speed\n  const paddle = getNewPaddle(state.paddle, size, distance, movement)\n\n  const { radius } = state.ball\n  const oldDirection = state.ball.direction\n  const newBallCenter = state.ball.center.add(oldDirection.scaleBy(distance))\n  const ballBottom = newBallCenter.y + radius\n  if (ballBottom > size.height) {\n    return {\n      ...state,\n      ...getInitialPaddleAndBall(size.width, size.height, paddle.width),\n      lives: lives - 1\n    }\n  }\n  \n  const withNewBallProps = props => ({\n    ...state,\n    paddle,\n    ball: {\n      ...state.ball,\n      ...props\n    }\n  })\n\n  const withNewBallDirection = normal => {\n    const distorted = getDistortedDirection(oldDirection.reflect(normal))\n    const direction = getAdjustedVector(normal, distorted)\n    return withNewBallProps({ direction })\n  }\n  const ballLeft = newBallCenter.x - radius\n  const ballRight = newBallCenter.x + radius\n  const ballTop = newBallCenter.y - radius\n  const paddleLeft = paddle.position.x\n  const paddleRight = paddleLeft+ paddle.width\n  const paddleTop = paddle.position.y\n\n  const ballGoingDown = Math.abs(UP.angleBetween(oldDirection)) > 90\n  const hitPaddle = ballGoingDown && ballBottom >= paddleTop && ballRight >= paddleLeft && ballLeft <= paddleRight\n  if (hitPaddle) return withNewBallDirection(UP)\n  if (ballTop <= 0) return withNewBallDirection(DOWN)\n  if (ballLeft <= 0) return withNewBallDirection(RIGHT)\n  if (ballRight >= size.width) return withNewBallDirection(LEFT)\n\n  const block = state.blocks.find(({ position, width, height }) => (\n    isInBoundaries(ballTop, ballBottom, position.y, position.y + height) &&\n    isInBoundaries(ballLeft, ballRight, position.x, position.x + width) \n  ))\n  if (block) {\n    const density = block.density - 1\n    const newBlock = { ...block, density }\n    const blocks = density < 0 ? withoutElement(state.blocks, block) : updateElement(state.blocks, block, newBlock)\n    \n    const getNewBallNormal = () => {\n      const blockTop = block.position.y\n      const blockBottom = blockTop + block.height\n      const blockLeft = block.position.x\n      if (ballTop > blockTop - radius && ballBottom < blockBottom + radius) {\n        if (ballLeft < blockLeft) return LEFT\n        if (ballRight > blockLeft + block.width) return RIGHT\n      }\n      if (ballTop > blockTop) return DOWN\n      if (ballTop <= blockTop) return UP\n    }\n    return {\n      ...withNewBallDirection(getNewBallNormal()),\n      blocks\n    }\n  }\n  return withNewBallProps({ center: newBallCenter })\n}","import React from 'react'\nimport { getRange } from '../utils';\nimport { BLOCK_MAX_DENSITY } from '../game/levels';\n\nconst colors = getRange(BLOCK_MAX_DENSITY).map(i => `rgba(26, 188, 156, ${1 / (BLOCK_MAX_DENSITY - i)})`)\n\nexport default ({ x, y, width, height, density }) => (\n  <rect className='block' fill={colors[density]} x={x} y={y} width={width} height={height} />\n)\n","import React from 'react'\n\nexport default ({ x, y, width, height }) => (\n  <rect className='paddle' x={x} y={y} width={width} height={height} />\n)","import React from 'react'\n\nexport default ({ x, y, radius }) => (\n  <circle className='ball' cx={x} cy={y} r={radius} />\n)","import React from 'react'\n\nexport default ({ level, unit }) => {\n  return (\n    <text x={unit} y={unit * 2} fontSize={unit} className='level'>LEVEL: {level}</text>\n  )\n}","import React from 'react'\n\nimport { getRange } from '../utils'\n\nexport default ({ lives, containerWidth, unit }) => {\n  const width = unit * 2\n  return getRange(lives).map(i => (\n    <rect\n      className='life'\n      rx={unit / 4}\n      height={unit}\n      width={width}\n      y={unit}\n      x={containerWidth - unit - width * (i + 1) - (unit / 2) * i}\n      key={i}\n    />\n  ))\n}","import React, { useEffect, useReducer } from 'react'\n\nimport { LEVELS } from '../game/levels'\nimport { MOVEMENT, getNewGameState, getGameStateFromLevel } from '../game/core'\n\nimport Block from './block'\nimport Paddle from './paddle'\nimport Ball from './ball'\nimport Level from './level'\nimport Lives from './lives'\nimport { registerListener } from '../utils';\n\nconst MOVEMENT_KEYS = {\n  LEFT: [65, 37],\n  RIGHT: [68, 39]\n}\n\nconst STOP_KEY = 32\n\nconst UPDATE_EVERY = 1000 / 60\n\nconst getProjectors = (containerSize, gameSize) => {\n  const widthRatio = containerSize.width / gameSize.width\n  const heightRatio = containerSize.height / gameSize.height\n  const unitOnScreen = Math.min(widthRatio, heightRatio)\n\n  return {\n    projectDistance: distance => distance * unitOnScreen,\n    projectVector: vector => vector.scaleBy(unitOnScreen)\n  }\n}\n\nconst initialStates = LEVELS.map(getGameStateFromLevel)\n\nconst getInitialLevel = () => {\n  const inState = localStorage.getItem('level')\n  return inState ? parseInt(inState, 10) : 0\n}\n\nconst ACTION = {\n  CONTAINER_SIZE_CHANGE: 'CONTAINER_SIZE_CHANGE',\n  KEY_DOWN: 'KEY_DOWN',\n  KEY_UP: 'KEY_UP',\n  TICK: 'TICK'\n}\n\nconst HANDLER = {\n  [ACTION.CONTAINER_SIZE_CHANGE]: (state, containerSize) => ({\n    ...state,\n    containerSize,\n    ...getProjectors(containerSize, state.game.size)\n  }),\n  [ACTION.KEY_DOWN]: (state, key) => {\n    if (MOVEMENT_KEYS.LEFT.includes(key)) {\n      return { ...state, movement: MOVEMENT.LEFT }\n    } else if (MOVEMENT_KEYS.RIGHT.includes(key)) {\n      return { ...state, movement: MOVEMENT.RIGHT }\n    }\n    return state\n  },\n  [ACTION.KEY_UP]: (state, key) => {\n    const newState = { ...state, movement: undefined }\n    if (key === STOP_KEY) {\n      if (state.stopTime) {\n        return { ...newState, stopTime: undefined, time: state.time + Date.now() - state.stopTime}\n      } else {\n        return { ...newState, stopTime: Date.now() }\n      }\n    }\n    return newState\n  },\n  [ACTION.TICK]: state => {\n    if (state.stopTime) return state\n\n    const time = Date.now()\n    const newGame = getNewGameState(state.game, state.movement, time - state.time)\n    const newState = { ...state, time }\n    if (newGame.lives < 1) {\n      return { ...newState, game: initialStates[state.level] }\n    } else if (newGame.blocks.length < 1) {\n      const level = state.level === initialStates.length ? state.level : state.level + 1\n      localStorage.setItem('level', level)\n      const game = initialStates[level]\n      return {\n        ...newState,\n        level,\n        game,\n        ...getProjectors(state.containerSize, game.size)\n      }\n    }\n    return { ...newState, game: newGame }\n  }\n}\n\nconst reducer = (state, { type, payload }) => {\n  const handler = HANDLER[type]\n  if (!handler) return state\n  return handler(state, payload)\n}\n\nconst getInitialState = containerSize => {\n  const level = getInitialLevel()\n  const game = initialStates[level]\n  const { projectDistance, projectVector } = getProjectors(containerSize, game.size)\n  return {\n    level,\n    game,\n    containerSize,\n    projectDistance,\n    projectVector,\n    time: Date.now(),\n    stopTime: undefined,\n    movement: undefined\n  }\n}\n\nexport default (containerSize) => {\n  const [state, dispatch] = useReducer(reducer, containerSize, getInitialState)\n  const act = (type, payload) => dispatch({ type, payload })\n  const {\n    projectDistance,\n    projectVector,\n    level,\n    game: {\n      blocks,\n      paddle,\n      ball,\n      size: {\n        width,\n        height\n      },\n      lives\n    }\n  } = state\n  \n  useEffect(() => act(ACTION.CONTAINER_SIZE_CHANGE, containerSize), [containerSize])\n\n  useEffect(() => {\n    const onKeyDown = ({ which }) => act(ACTION.KEY_DOWN, which)\n    const onKeyUp = ({ which }) => act(ACTION.KEY_UP, which)\n    const tick = () => act(ACTION.TICK)\n\n    const timerId = setInterval(tick, UPDATE_EVERY)\n    const unregisterKeydown = registerListener('keydown', onKeyDown)\n    const unregisterKeyup = registerListener('keyup', onKeyUp)\n    return () => {\n      clearInterval(timerId)\n      unregisterKeydown()\n      unregisterKeyup()\n    }\n  }, [])\n  const viewWidth = projectDistance(width)\n  const unit = projectDistance(ball.radius)\n  return (\n    <svg width={viewWidth} height={projectDistance(height)} className='scene'>\n      <Level unit={unit} level={level + 1} />\n      <Lives\n        lives={lives}\n        containerWidth={viewWidth}\n        unit={unit}\n      />\n      {blocks.map(({ density, position, width, height }) => (\n        <Block\n          density={density}\n          key={`${position.x}-${position.y}`}\n          width={projectDistance(width)}\n          height={projectDistance(height)}\n          {...projectVector(position)}\n        />)\n      )}\n      <Paddle width={projectDistance(paddle.width)} height={projectDistance(paddle.height)} {...projectVector(paddle.position)} />\n      <Ball {...projectVector(ball.center)} radius={unit} />\n    </svg>\n  )\n}","import Page from './components/page'\n\nexport default Page\n","import React, { useRef, useEffect, useState } from 'react'\n\nimport Scene from './scene'\nimport { registerListener } from '../utils'\n\nexport default () => {\n  const svgElement = useRef()\n  const [size, setSize] = useState()\n\n  const onResize = () => {\n    const { width, height } = svgElement.current.getBoundingClientRect()\n    setSize({ width, height })\n  }\n\n  useEffect(() => {\n    const unregisterResizeListener = registerListener('resize', onResize)\n    onResize()\n    return unregisterResizeListener\n  }, [])\n\n  return (\n    <div className='page'>\n      <div className='scene-container' ref={svgElement}>\n        {size && <Scene width={size.width} height={size.height} />}\n      </div>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}