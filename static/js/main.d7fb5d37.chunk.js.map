{"version":3,"sources":["utils.js","game/levels.js","game/vector.js","game/core.js","components/level.js","components/lives.js","components/block.js","components/paddle.js","components/ball.js","components/scene.js","App.js","components/page.js","serviceWorker.js","index.js"],"names":["getRange","length","Object","toConsumableArray","Array","keys","getRandomFrom","_len","arguments","args","_key","Math","floor","random","registerListener","eventName","handler","window","addEventListener","removeEventListener","getRandomBlock","getBlocks","rows","columns","map","LEVELS","lives","paddleWidth","speed","blocks","Vector","x","y","classCallCheck","this","number","hypot","_ref","scaleBy","_ref2","_ref3","other","amt","dotProduct","normal","subtract","projectOn","degrees","radians","PI","toRadians","cos","sin","_ref4","atan2","crossProduct","MOVEMENT","LEFT","RIGHT","UP","DOWN","LEFT_UP","add","normalize","RIGHT_UP","getInitialPaddleAndBall","width","height","paddleY","paddle","position","ball","center","BALL_RADIUS","radius","direction","getGameStateFromLevel","arrays","blocksStart","rowsOfBlocks","row","i","density","j","size","objectSpread","reduce","acc","concat","isInBoundaries","oneSide","otherSide","oneBoundary","otherBoundary","getNewGameState","state","movement","timespan","distance","withNewX","getNewPaddle","oldDirection","newBallCenter","ballBottom","withNewBallProps","props","withNewBallDirection","vector","minAngle","undefined","angle","angleBetween","maxAngle","rotate","getAdjustedVector","distortionLevel","getComponent","distortion","getDistortedDirection","reflect","ballLeft","ballRight","ballTop","paddleLeft","paddleRight","paddleTop","abs","array","element","block","find","newBlock","filter","e","oldElement","newElement","updateElement","blockTop","blockBottom","blockLeft","getNewBallNormal","components_level","level","unit","react_default","a","createElement","className","fontSize","components_lives","containerWidth","rx","key","colors","components_block","fill","components_paddle","components_ball","cx","cy","r","MOVEMENT_KEYS","ACTION","HANDLER","_HANDLER","defineProperty","containerSize","getProjectors","game","includes","newState","stopTime","time","Date","now","newGame","localStorage","setItem","gameSize","widthRatio","heightRatio","unitOnScreen","min","projectDistance","projectVector","getInitialState","inState","getItem","parseInt","getInitialLevel","_getProjectors","reducer","type","payload","scene","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","act","_state$game","_state$game$size","useEffect","timerId","setInterval","unregisterKeydown","which","unregisterKeyup","clearInterval","viewWidth","assign","Page","sceneContainer","useRef","_useState","useState","_useState2","setSize","onResize","_sceneContainer$curre","current","getBoundingClientRect","unregisterResizeListener","ref","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+LAGaA,EAAW,SAAAC,GAAM,OAAAC,OAAAC,EAAA,EAAAD,CAAQE,MAAMH,GAAQI,SACvCC,EAAgB,mBAAAC,EAAAC,UAAAP,OAAIQ,EAAJ,IAAAL,MAAAG,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAID,EAAJC,GAAAF,UAAAE,GAAA,OAAaD,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKR,UAKlEa,EAAmB,SAACC,EAAWC,GAE1C,OADAC,OAAOC,iBAAiBH,EAAWC,GAC5B,kBAAMC,OAAOE,oBAAoBJ,EAAWC,KCP/CI,EAAiB,kBAAMT,KAAKC,MAFD,EAEOD,KAAKE,WAEvCQ,EAAY,SAACC,EAAMC,GAAP,OAChBvB,EAASsB,GAAME,IAAI,kBAAMxB,EAASuB,GAASC,IAAIJ,MAEpCK,EAAS,CACpB,CACEC,MAAO,EACPC,YAAa,IACbC,MAAO,EACPC,OAAQR,EAAU,EAAG,IAEvB,CACEK,MAAO,EACPC,YAAa,EACbC,MAAO,IACPC,OAAQR,EAAU,EAAG,IAEvB,CACEK,MAAO,EACPC,YAAa,IACbC,MAAO,IACPC,OAAQR,EAAU,EAAG,IAEvB,CACEK,MAAO,EACPC,YAAa,EACbC,MAAO,IACPC,OAAQR,EAAU,EAAG,mBC9BJS,aACnB,SAAAA,EAAYC,EAAGC,GAAI9B,OAAA+B,EAAA,EAAA/B,CAAAgC,KAAAJ,GACjBI,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,sDAGHG,GACN,OAAO,IAAIL,EAAOI,KAAKH,EAAII,EAAQD,KAAKF,EAAIG,oCAI5C,OAAOxB,KAAKyB,MAAMF,KAAKH,EAAGG,KAAKF,kCAGnB,IAARD,EAAQM,EAARN,EAAGC,EAAKK,EAALL,EACP,OAAO,IAAIF,EAAOI,KAAKH,EAAIA,EAAGG,KAAKF,EAAIA,uCAIvC,OAAOE,KAAKI,QAAQ,EAAIJ,KAAKjC,8CAGZ,IAAR8B,EAAQQ,EAARR,EAAGC,EAAKO,EAALP,EACZ,OAAO,IAAIF,EAAOI,KAAKH,EAAIA,EAAGG,KAAKF,EAAIA,yCAGpB,IAARD,EAAQS,EAART,EAAGC,EAAKQ,EAALR,EACd,OAAOE,KAAKH,EAAIA,EAAIG,KAAKF,EAAIA,oCAGrBS,GACR,IAAMC,EAAMR,KAAKS,WAAWF,GAASA,EAAMxC,SAC3C,OAAO,IAAI6B,EAAOY,EAAMD,EAAMV,EAAGW,EAAMD,EAAMT,mCAGvCY,GACN,OAAOV,KAAKW,SAASX,KAAKY,UAAUF,GAAQN,QAAQ,mCAG/CS,GACL,IAAMC,EFzCe,SAAAD,GAAO,OAAKA,EAAUpC,KAAKsC,GAAM,IEyCtCC,CAAUH,GACpBI,EAAMxC,KAAKwC,IAAIH,GACfI,EAAMzC,KAAKyC,IAAIJ,GAErB,OAAO,IAAIlB,EACTI,KAAKH,EAAIoB,EAAMjB,KAAKF,EAAIoB,EACxBlB,KAAKH,EAAIqB,EAAMlB,KAAKF,EAAImB,2CAIL,IAARpB,EAAQsB,EAARtB,EAAGC,EAAKqB,EAALrB,EAChB,OAAOE,KAAKH,EAAIC,EAAID,EAAIG,KAAKF,uCAGlBS,GACX,OFzD2C,IE0DzC9B,KAAK2C,MAAMpB,KAAKqB,aAAad,GAAQP,KAAKS,WAAWF,IF1DL9B,KAAKsC,YGS9CO,EACL,OADKA,EAEJ,QAGHC,EAAO,IAAI3B,GAAQ,EAAG,GACtB4B,EAAQ,IAAI5B,EAAO,EAAG,GACtB6B,EAAK,IAAI7B,EAAO,GAAI,GACpB8B,EAAO,IAAI9B,EAAO,EAAG,GAErB+B,EAAUJ,EAAKK,IAAIH,GAAII,YACvBC,EAAWN,EAAMI,IAAIH,GAAII,YAElBE,EAA0B,SAACC,EAAOC,EAAQxC,GACrD,IAAMyC,EAAUD,EAnBG,EAAI,EA+BvB,MAAO,CACLE,OAZa,CACbC,SAAU,IAAIxC,GAAQoC,EAAQvC,GAAe,EAAGyC,GAChDF,MAAOvC,EACPwC,OAvBiB,EAAI,GAiCrBI,KARW,CACXC,OAAQ,IAAI1C,EAAOqC,EAAS,EAAGC,EAAUK,IACzCC,OAzBgB,GA0BhBC,UAAWrE,EAAcuD,EAASG,MASzBY,EAAwB,SAAAvC,GAA2C,IHpCzDwC,EGoCiBnD,EAAwCW,EAAxCX,MAAOC,EAAiCU,EAAjCV,YAAaC,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,OAC3DqC,EAAQrC,EAAO,GAAG5B,OAClBkE,EAASD,EAETY,GAAgBX,EAASA,GA1Cb,EAAI,GA0CiCtC,EAAO5B,QAzC3C,EAAI,IAyCgE,EAEjF8E,EAAelD,EAAOL,IAAI,SAACwD,EAAKC,GAAN,OAC9BD,EAAIxD,IAAI,SAAC0D,EAASC,GAAV,MAAiB,CACvBD,UACAZ,SAAU,IAAIxC,EAAOqD,EAAGL,EAAeG,GA9CxB,EAAI,IA+CnBf,MAAO,EACPC,OAhDe,EAAI,OAoDjBiB,EAAO,CACXlB,QACAC,UAGF,OAAOjE,OAAAmF,EAAA,EAAAnF,CAAA,CACLkF,OACAvD,QH1DmBgD,EG0DHE,EH1DaF,EAAOS,OAAO,SAACC,EAAKP,GAAN,SAAAQ,OAAAtF,OAAAC,EAAA,EAAAD,CAAkBqF,GAAlBrF,OAAAC,EAAA,EAAAD,CAA0B8E,KAAM,MG2DxEf,EAAwBC,EAAOC,EAAQxC,GAH5C,CAIED,QACAE,WA6BE6D,EAAiB,SAACC,EAASC,EAAWC,EAAaC,GAAlC,OACpBH,GAAWE,GAAeF,GAAWG,GACrCF,GAAaC,GAAeD,GAAaE,GAwB/BC,EAAkB,SAACC,EAAOC,EAAUC,GAAa,IACpDb,EAAuBW,EAAvBX,KAAMxD,EAAiBmE,EAAjBnE,MAAOF,EAAUqE,EAAVrE,MACfwE,EApHe,KAoHJD,EAA4BrE,EACvCyC,EAhDa,SAACA,EAAQe,EAAMc,EAAUF,GAC5C,IAAKA,EAAU,OAAO3B,EACtB,IAAMM,EAAYqB,IAAaxC,EAAgBC,EAAOC,EAE9C3B,EAAMsC,EAAOC,SAASR,IAAIa,EAAUrC,QAAQ4D,IAA5CnE,EACFoE,EAAW,SAAApE,GAAC,OAAA7B,OAAAmF,EAAA,EAAAnF,CAAA,GACbmE,EADa,CAEhBC,SAAU,IAAIxC,EAAOC,EAAGsC,EAAOC,SAAStC,MAG1C,OAAID,EAAI,EACCoE,EAAS,GAEdpE,EAAIsC,EAAOH,MAAQkB,EAAKlB,MACnBiC,EAASf,EAAKlB,MAAQG,EAAOH,OAE/BiC,EAASpE,GAgCDqE,CAAaL,EAAM1B,OAAQe,EAAMc,EAAUF,GAElDtB,EAAWqB,EAAMxB,KAAjBG,OACF2B,EAAeN,EAAMxB,KAAKI,UAC1B2B,EAAgBP,EAAMxB,KAAKC,OAAOV,IAAIuC,EAAa/D,QAAQ4D,IAC3DK,EAAaD,EAActE,EAAI0C,EACrC,GAAI6B,EAAanB,EAAKjB,OACpB,OAAOjE,OAAAmF,EAAA,EAAAnF,CAAA,GACF6F,EACA9B,EAAwBmB,EAAKlB,MAAOkB,EAAKjB,OAAQE,EAAOH,OAF7D,CAGExC,MAAOA,EAAQ,IAInB,IAAM8E,EAAmB,SAAAC,GAAK,OAAAvG,OAAAmF,EAAA,EAAAnF,CAAA,GACzB6F,EADyB,CAE5B1B,SACAE,KAAKrE,OAAAmF,EAAA,EAAAnF,CAAA,GACA6F,EAAMxB,KACNkC,MAIDC,EAAuB,SAAA9D,GAC3B,IACM+B,EAjDgB,SAAC/B,EAAQ+D,GAA0B,IAAlBC,EAAkBpG,UAAAP,OAAA,QAAA4G,IAAArG,UAAA,GAAAA,UAAA,GAAP,GAC9CsG,EAAQlE,EAAOmE,aAAaJ,GAC5BK,EAAW,GAAKJ,EACtB,GAAIE,EAAQ,EAAG,CACb,GAAIA,GAASF,EACX,OAAOhE,EAAOqE,QAAQL,GAExB,GAAIE,GAASE,EACX,OAAOpE,EAAOqE,QAAQD,OAEnB,CACL,GAAIF,EAAQF,EACV,OAAOhE,EAAOqE,OAAOL,GAEvB,GAAIE,EAAQE,EACV,OAAOpE,EAAOqE,OAAOD,GAGzB,OAAOL,EA+BaO,CAAkBtE,EA/EV,SAAC+D,GAAkC,IAA1BQ,EAA0B3G,UAAAP,OAAA,QAAA4G,IAAArG,UAAA,GAAAA,UAAA,GAAR,GACjD4G,EAAe,kBAAMzG,KAAKE,SAAWsG,EAAkBA,EAAkB,GACzEE,EAAa,IAAIvF,EAAOsF,IAAgBA,KAC9C,OAAOT,EAAO7C,IAAIuD,GAAYtD,YA2EVuD,CAAsBjB,EAAakB,QAAQ3E,KAE7D,OAAO4D,EAAiB,CAAE7B,eAEtB6C,EAAWlB,EAAcvE,EAAI2C,EAC7B+C,EAAYnB,EAAcvE,EAAI2C,EAC9BgD,EAAUpB,EAActE,EAAI0C,EAC5BiD,EAAatD,EAAOC,SAASvC,EAC7B6F,EAAcD,EAAatD,EAAOH,MAClC2D,EAAYxD,EAAOC,SAAStC,EAIlC,GAFsBrB,KAAKmH,IAAInE,EAAGoD,aAAaV,IAAiB,IAC7BE,GAAcsB,GAAaJ,GAAaE,GAAcH,GAAYI,EACtF,OAAOlB,EAAqB/C,GAC3C,GAAI+D,GAAW,EAAG,OAAOhB,EAAqB9C,GAC9C,GAAI4D,GAAY,EAAG,OAAOd,EAAqBhD,GAC/C,GAAI+D,GAAarC,EAAKlB,MAAO,OAAOwC,EAAqBjD,GAEzD,IHhK6BsE,EAAOC,EGgK9BC,EAAQlC,EAAMlE,OAAOqG,KAAK,SAAA3F,GAAA,IAAG+B,EAAH/B,EAAG+B,SAAUJ,EAAb3B,EAAa2B,MAAOC,EAApB5B,EAAoB4B,OAApB,OAC9BsB,EAAeiC,EAASnB,EAAYjC,EAAStC,EAAGsC,EAAStC,EAAImC,IAC7DsB,EAAe+B,EAAUC,EAAWnD,EAASvC,EAAGuC,EAASvC,EAAImC,KAE/D,GAAI+D,EAAO,CACT,IAAM/C,EAAU+C,EAAM/C,QAAU,EAC1BiD,EAAQjI,OAAAmF,EAAA,EAAAnF,CAAA,GAAQ+H,EAAR,CAAe/C,YACvBrD,EAASqD,EAAU,GHvKE6C,EGuKiBhC,EAAMlE,OHvKhBmG,EGuKwBC,EHvKZF,EAAMK,OAAO,SAAAC,GAAC,OAAIA,IAAML,KAC7C,SAACD,EAAOO,EAAYC,GAApB,OAAmCR,EAAMvG,IAAI,SAAA6G,GAAC,OAAIA,IAAMC,EAAaC,EAAaF,IGsKxCG,CAAczC,EAAMlE,OAAQoG,EAAOE,GAatG,OAAOjI,OAAAmF,EAAA,EAAAnF,CAAA,GACFwG,EAZoB,WACvB,IAAM+B,EAAWR,EAAM3D,SAAStC,EAC1B0G,EAAcD,EAAWR,EAAM9D,OAC/BwE,EAAYV,EAAM3D,SAASvC,EACjC,GAAI2F,EAAUe,EAAW/D,GAAU6B,EAAamC,EAAchE,EAAQ,CACpE,GAAI8C,EAAWmB,EAAW,OAAOlF,EACjC,GAAIgE,EAAYkB,EAAYV,EAAM/D,MAAO,OAAOR,EAElD,OAAIgE,EAAUe,EAAiB7E,EAC3B8D,GAAWe,EAAiB9E,OAAhC,EAGwBiF,IAD1B,CAEE/G,WAGJ,OAAO2E,EAAiB,CAAEhC,OAAQ8B,KC7LrBuC,EAAA,SAAAxG,GAAA,IAAGyG,EAAHzG,EAAGyG,MAAOC,EAAV1G,EAAU0G,KAAV,OACbC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQpH,EAAGgH,EAAM/G,EAAU,EAAP+G,EAAUK,SAAUL,GAAxD,UAAsED,ICCzDO,EAAA,SAAAhH,GAAqC,IAAlCX,EAAkCW,EAAlCX,MAAO4H,EAA2BjH,EAA3BiH,eAAgBP,EAAW1G,EAAX0G,KACjC7E,EAAe,EAAP6E,EACd,OAAO/I,EAAS0B,GAAOF,IAAI,SAAAyD,GAAC,OAC1B+D,EAAAC,EAAAC,cAAA,QACEC,UAAU,OACVI,GAAIR,EAAO,EACX5E,OAAQ4E,EACR7E,MAAOA,EACPlC,EAAG+G,EACHhH,EAAGuH,EAAiBP,EAAO7E,GAASe,EAAI,GAAM8D,EAAO,EAAK9D,EAC1DuE,IAAKvE,OCTLwE,EAASzJ,ELHkB,GKGUwB,IAAI,SAAAyD,GAAC,4BAAAO,OAA0B,GLHzC,EKGkEP,GAAnD,OAEjCyE,EAAA,SAAArH,GAAA,IAAGN,EAAHM,EAAGN,EAAGC,EAANK,EAAML,EAAGkC,EAAT7B,EAAS6B,MAAOC,EAAhB9B,EAAgB8B,OAAQe,EAAxB7C,EAAwB6C,QAAxB,OACb8D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQQ,KAAMF,EAAOvE,GAAUnD,EAAGA,EAAGC,EAAGA,EAAGkC,MAAOA,EAAOC,OAAQA,KCNpEyF,EAAA,SAAAvH,GAAA,IAAGN,EAAHM,EAAGN,EAAGC,EAANK,EAAML,EAAGkC,EAAT7B,EAAS6B,MAAOC,EAAhB9B,EAAgB8B,OAAhB,OACb6E,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASpH,EAAGA,EAAGC,EAAGA,EAAGkC,MAAOA,EAAOC,OAAQA,KCD9C0F,EAAA,SAAAxH,GAAA,IAAGN,EAAHM,EAAGN,EAAGC,EAANK,EAAML,EAAG0C,EAATrC,EAASqC,OAAT,OACbsE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOW,GAAI/H,EAAGgI,GAAI/H,EAAGgI,EAAGtF,KCStCuF,EAAgB,CACpBxG,KAAM,CAAC,GAAI,IACXC,MAAO,CAAC,GAAI,KAORwG,EACmB,wBADnBA,EAEM,WAFNA,EAGI,SAHJA,EAIE,OAGFC,GAAOC,EAAA,GAAAlK,OAAAmK,EAAA,EAAAnK,CAAAkK,EACVF,EAA+B,SAACnE,EAAOuE,GAAR,OAAApK,OAAAmF,EAAA,EAAAnF,CAAA,GAC3B6F,EAD2B,CAE9BuE,iBACGC,EAAcD,EAAevE,EAAMyE,KAAKpF,SAJlClF,OAAAmK,EAAA,EAAAnK,CAAAkK,EAMVF,EAAkB,SAACnE,EAAOyD,GACzB,OAAIS,EAAcxG,KAAKgH,SAASjB,GACvBtJ,OAAAmF,EAAA,EAAAnF,CAAA,GAAK6F,EAAZ,CAAmBC,SAAUxC,IACpByG,EAAcvG,MAAM+G,SAASjB,GAC/BtJ,OAAAmF,EAAA,EAAAnF,CAAA,GAAK6F,EAAZ,CAAmBC,SAAUxC,IAExBuC,IAZE7F,OAAAmK,EAAA,EAAAnK,CAAAkK,EAcVF,EAAgB,SAACnE,EAAOyD,GACvB,IAAMkB,EAAQxK,OAAAmF,EAAA,EAAAnF,CAAA,GAAQ6F,EAAR,CAAeC,cAAUa,IACvC,OA3Ba,KA2BT2C,EACEzD,EAAM4E,SACDzK,OAAAmF,EAAA,EAAAnF,CAAA,GAAKwK,EAAZ,CAAsBC,cAAU9D,EAAW+D,KAAM7E,EAAM6E,KAAOC,KAAKC,MAAQ/E,EAAM4E,WAE1EzK,OAAAmF,EAAA,EAAAnF,CAAA,GAAKwK,EAAZ,CAAsBC,SAAUE,KAAKC,QAGlCJ,IAvBExK,OAAAmK,EAAA,EAAAnK,CAAAkK,EAyBVF,EAAc,SAAAnE,GACb,GAAIA,EAAM4E,SAAU,OAAO5E,EAE3B,IAAM6E,EAAOC,KAAKC,MACZC,EAAUjF,EAAgBC,EAAMyE,KAAMzE,EAAMC,SAAU4E,EAAO7E,EAAM6E,MACnEF,EAAQxK,OAAAmF,EAAA,EAAAnF,CAAA,GAAQ6F,EAAR,CAAe6E,SAC7B,GAAIG,EAAQrJ,MAAQ,EAClB,OAAOxB,OAAAmF,EAAA,EAAAnF,CAAA,GAAKwK,EAAZ,CAAsBF,KAAM5F,EAAsBnD,EAAOsE,EAAM+C,UAC1D,GAAIiC,EAAQlJ,OAAO5B,OAAS,EAAG,CACpC,IAAM6I,EAAQ/C,EAAM+C,QAAUrH,EAAOxB,OAAS8F,EAAM+C,MAAQ/C,EAAM+C,MAAQ,EAC1EkC,aAAaC,QAAQ,QAASnC,GAC9B,IAAM0B,EAAO5F,EAAsBnD,EAAOsE,EAAM+C,QAChD,OAAO5I,OAAAmF,EAAA,EAAAnF,CAAA,GACFwK,EADL,CAEE5B,QACA0B,QACGD,EAAcxE,EAAMuE,cAAeE,EAAKpF,OAG/C,OAAOlF,OAAAmF,EAAA,EAAAnF,CAAA,GAAKwK,EAAZ,CAAsBF,KAAMO,MA5CnBX,GAqDPG,EAAgB,SAACD,EAAeY,GACpC,IAAMC,EAAab,EAAcpG,MAAQgH,EAAShH,MAC5CkH,EAAcd,EAAcnG,OAAS+G,EAAS/G,OAC9CkH,EAAe1K,KAAK2K,IAAIH,EAAYC,GAE1C,MAAO,CACLG,gBAAiB,SAAArF,GAAQ,OAAIA,EAAWmF,GACxCG,cAAe,SAAA7E,GAAM,OAAIA,EAAOrE,QAAQ+I,MAItCI,EAAkB,SAAAnB,GACtB,IAAMxB,EAjBgB,WACtB,IAAM4C,EAAUV,aAAaW,QAAQ,SACrC,OAAOD,EAAUE,SAASF,EAAS,IAAM,EAe3BG,GACRrB,EAAO5F,EAAsBnD,EAAOqH,IAFHgD,EAGIvB,EAAcD,EAAeE,EAAKpF,MAC7E,MAAO,CACL0D,QACA0B,OACAF,gBACAiB,gBARqCO,EAG/BP,gBAMNC,cATqCM,EAGdN,cAOvBZ,KAAMC,KAAKC,MACXH,cAAU9D,EACVb,cAAUa,IAIRkF,EAAU,SAAChG,EAAD1D,GAA8B,IAApB2J,EAAoB3J,EAApB2J,KAAMC,EAAc5J,EAAd4J,QACxBjL,EAAUmJ,EAAQ6B,GACxB,OAAKhL,EACEA,EAAQ+E,EAAOkG,GADDlG,GAIRmG,EAAA,SAAC5B,GAAkB,IAAA6B,EACNC,qBAAWL,EAASzB,EAAemB,GAD7BY,EAAAnM,OAAAoM,EAAA,EAAApM,CAAAiM,EAAA,GACzBpG,EADyBsG,EAAA,GAClBE,EADkBF,EAAA,GAE1BG,EAAM,SAACR,EAAMC,GAAP,OAAmBM,EAAS,CAAEP,OAAMC,aAE9CV,EAaExF,EAbFwF,gBACAC,EAYEzF,EAZFyF,cACA1C,EAWE/C,EAXF+C,MAN8B2D,EAiB5B1G,EAVFyE,KACE3I,EAR4B4K,EAQ5B5K,OACAwC,EAT4BoI,EAS5BpI,OACAE,EAV4BkI,EAU5BlI,KAV4BmI,EAAAD,EAW5BrH,KACElB,EAZ0BwI,EAY1BxI,MACAC,EAb0BuI,EAa1BvI,OAEFzC,EAf4B+K,EAe5B/K,MAIJiL,oBAAU,kBAAMH,EAAItC,EAA8BI,IAAgB,CAACA,IACnEqC,oBAAU,WACR,IAIMC,EAAUC,YAFH,kBAAML,EAAItC,IAtHN,IAAO,IAyHlB4C,EAAoBhM,EAAiB,UALzB,SAAAyB,GAAA,IAAGwK,EAAHxK,EAAGwK,MAAH,OAAeP,EAAItC,EAAiB6C,KAMhDC,EAAkBlM,EAAiB,QALzB,SAAA0B,GAAA,IAAGuK,EAAHvK,EAAGuK,MAAH,OAAeP,EAAItC,EAAe6C,KAOlD,OAAO,WACLE,cAAcL,GACdE,IACAE,MAED,IAEH,IAAME,EAAY3B,EAAgBrH,GAC5B6E,EAAOwC,EAAgBhH,EAAKG,QAElC,OACEsE,EAAAC,EAAAC,cAAA,OAAKhF,MAAOgJ,EAAW/I,OAAQoH,EAAgBpH,GAASgF,UAAU,SAChEH,EAAAC,EAAAC,cAACL,EAAD,CAAOE,KAAMA,EAAMD,MAAOA,EAAQ,IAClCE,EAAAC,EAAAC,cAACG,EAAD,CACE3H,MAAOA,EACP4H,eAAgB4D,EAChBnE,KAAMA,IAEPlH,EAAOL,IAAI,SAAA6B,GAAA,IAAG6B,EAAH7B,EAAG6B,QAASZ,EAAZjB,EAAYiB,SAAUJ,EAAtBb,EAAsBa,MAAOC,EAA7Bd,EAA6Bc,OAA7B,OACV6E,EAAAC,EAAAC,cAACQ,EAADxJ,OAAAiN,OAAA,CACEjI,QAASA,EACTsE,IAAG,GAAAhE,OAAKlB,EAASvC,EAAd,KAAAyD,OAAmBlB,EAAStC,GAC/BkC,MAAOqH,EAAgBrH,GACvBC,OAAQoH,EAAgBpH,IACpBqH,EAAclH,OAGtB0E,EAAAC,EAAAC,cAACU,EAAD1J,OAAAiN,OAAA,CACEjJ,MAAOqH,EAAgBlH,EAAOH,OAC9BC,OAAQoH,EAAgBlH,EAAOF,SAC3BqH,EAAcnH,EAAOC,YAE3B0E,EAAAC,EAAAC,cAACW,EAAD3J,OAAAiN,OAAA,GAAU3B,EAAcjH,EAAKC,QAA7B,CAAsCE,OAAQqE,OC7KrCqE,ECGA,WACb,IAAMC,EAAiBC,mBADJC,EAEKC,qBAFLC,EAAAvN,OAAAoM,EAAA,EAAApM,CAAAqN,EAAA,GAEZnI,EAFYqI,EAAA,GAENC,EAFMD,EAAA,GAcnB,OAVAd,oBAAU,WACR,IAAMgB,EAAW,WAAM,IAAAC,EACKP,EAAeQ,QAAQC,wBAAzC5J,EADa0J,EACb1J,MAAOC,EADMyJ,EACNzJ,OACfuJ,EAAQ,CAAExJ,QAAOC,YAEb4J,EAA2BjN,EAAiB,SAAU6M,GAE5D,OADAA,IACOI,GACN,IAGD/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB6E,IAAKX,GACnCjI,GAAQ4D,EAAAC,EAAAC,cAACgD,EAAU9G,MCVR6I,QACW,cAA7BhN,OAAOiN,SAASC,UAEe,UAA7BlN,OAAOiN,SAASC,UAEhBlN,OAAOiN,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d7fb5d37.chunk.js","sourcesContent":["export const toDegrees = radians => (radians * 180) / Math.PI\nexport const toRadians = degrees => (degrees * Math.PI) / 180\n\nexport const getRange = length => [...Array(length).keys()]\nexport const getRandomFrom = (...args) => args[Math.floor(Math.random() * args.length)]\nexport const flatten = arrays => arrays.reduce((acc, row) => [...acc, ...row], [])\nexport const withoutElement = (array, element) => array.filter(e => e !== element)\nexport const updateElement = (array, oldElement, newElement) => array.map(e => e === oldElement ? newElement : e)\n\nexport const registerListener = (eventName, handler) => {\n  window.addEventListener(eventName, handler)\n  return () => window.removeEventListener(eventName, handler)\n}","import { getRange } from '../utils'\n\nexport const BLOCK_MAX_DENSITY = 3\n\nconst getRandomBlock = () => Math.floor(Math.random() * BLOCK_MAX_DENSITY)\n\nconst getBlocks = (rows, columns) =>\n  getRange(rows).map(() => getRange(columns).map(getRandomBlock))\n\nexport const LEVELS = [\n  {\n    lives: 5,\n    paddleWidth: 3.5,\n    speed: 1,\n    blocks: getBlocks(3, 6)\n  },\n  {\n    lives: 4,\n    paddleWidth: 3,\n    speed: 1.4,\n    blocks: getBlocks(3, 7)\n  },\n  {\n    lives: 4,\n    paddleWidth: 2.5,\n    speed: 1.8,\n    blocks: getBlocks(5, 8)\n  },\n  {\n    lives: 3,\n    paddleWidth: 2,\n    speed: 2.2,\n    blocks: getBlocks(6, 9)\n  }\n]","import { toDegrees, toRadians } from '../utils'\n\nexport default class Vector {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  scaleBy(number) {\n    return new Vector(this.x * number, this.y * number)\n  }\n\n  length() {\n    return Math.hypot(this.x, this.y)\n  }\n\n  add({ x, y }) {\n    return new Vector(this.x + x, this.y + y)\n  }\n\n  normalize() {\n    return this.scaleBy(1 / this.length())\n  }\n\n  subtract({ x, y }) {\n    return new Vector(this.x - x, this.y - y)\n  }\n\n  dotProduct({ x, y }) {\n    return this.x * x + this.y * y\n  }\n\n  projectOn(other) {\n    const amt = this.dotProduct(other) / other.length()\n    return new Vector(amt * other.x, amt * other.y)\n  }\n\n  reflect(normal) {\n    return this.subtract(this.projectOn(normal).scaleBy(2))\n  }\n\n  rotate(degrees) {\n    const radians = toRadians(degrees)\n    const cos = Math.cos(radians)\n    const sin = Math.sin(radians)\n\n    return new Vector(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos\n    )\n  }\n\n  crossProduct({ x, y }) {\n    return this.x * y - x * this.y\n  }\n\n  angleBetween(other) {\n    return toDegrees(\n      Math.atan2(this.crossProduct(other), this.dotProduct(other))\n    )\n  }\n}","import Vector from './vector'\nimport { flatten, getRandomFrom, withoutElement, updateElement } from '../utils'\n\nconst PADDLE_AREA = 1 / 3\nconst BLOCK_HEIGHT = 1 / 3\nconst PADDLE_HEIGHT = BLOCK_HEIGHT\nconst BALL_RADIUS = 1 / 5\nconst DISTANCE_IN_MS = 0.005\n\nexport const MOVEMENT = {\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT'\n}\n\nconst LEFT = new Vector(-1, 0)\nconst RIGHT = new Vector(1, 0)\nconst UP = new Vector(0, -1)\nconst DOWN = new Vector(0, 1)\n\nconst LEFT_UP = LEFT.add(UP).normalize()\nconst RIGHT_UP = RIGHT.add(UP).normalize()\n\nexport const getInitialPaddleAndBall = (width, height, paddleWidth) => {\n  const paddleY = height - PADDLE_HEIGHT\n  const paddle = {\n    position: new Vector((width - paddleWidth) / 2, paddleY),\n    width: paddleWidth,\n    height: PADDLE_HEIGHT\n  }\n  const ball = {\n    center: new Vector(height / 2, paddleY - BALL_RADIUS * 2),\n    radius: BALL_RADIUS,\n    direction: getRandomFrom(LEFT_UP, RIGHT_UP)\n  }\n\n  return {\n    paddle,\n    ball\n  }\n}\n\nexport const getGameStateFromLevel = ({ lives, paddleWidth, speed, blocks }) => {\n  const width = blocks[0].length\n  const height = width\n\n  const blocksStart = ((height - height * PADDLE_AREA) - blocks.length * BLOCK_HEIGHT) / 2\n\n  const rowsOfBlocks = blocks.map((row, i) =>\n    row.map((density, j) => ({\n      density,\n      position: new Vector(j, blocksStart + (i * BLOCK_HEIGHT)),\n      width: 1,\n      height: BLOCK_HEIGHT\n    }))\n  )\n\n  const size = {\n    width,\n    height\n  }\n\n  return {\n    size,\n    blocks: flatten(rowsOfBlocks),\n    ...getInitialPaddleAndBall(width, height, paddleWidth),\n    lives,\n    speed\n  }\n}\n\nconst getDistortedDirection = (vector, distortionLevel = 0.3) => {\n  const getComponent = () => Math.random() * distortionLevel - distortionLevel / 2\n  const distortion = new Vector(getComponent(), getComponent())\n  return vector.add(distortion).normalize()\n}\n\nconst getNewPaddle = (paddle, size, distance, movement) => {\n  if (!movement) return paddle\n  const direction = movement === MOVEMENT.LEFT ? LEFT : RIGHT\n\n  const { x } = paddle.position.add(direction.scaleBy(distance))\n  const withNewX = x => ({\n    ...paddle,\n    position: new Vector(x, paddle.position.y)\n  })\n\n  if (x < 0) {\n    return withNewX(0)\n  }\n  if (x + paddle.width > size.width) {\n    return withNewX(size.width - paddle.width)\n  }\n  return withNewX(x)\n}\n\nconst isInBoundaries = (oneSide, otherSide, oneBoundary, otherBoundary) => (\n  (oneSide >= oneBoundary && oneSide <= otherBoundary) ||\n  (otherSide >= oneBoundary && otherSide <= otherBoundary)\n)\n\nconst getAdjustedVector = (normal, vector, minAngle = 15) => {\n  const angle = normal.angleBetween(vector)\n  const maxAngle = 90 - minAngle\n  if (angle < 0) {\n    if (angle > -minAngle) {\n      return normal.rotate(-minAngle)\n    }\n    if (angle < -maxAngle) {\n      return normal.rotate(-maxAngle)\n    }\n  } else {\n    if (angle < minAngle) {\n      return normal.rotate(minAngle)\n    }\n    if (angle > maxAngle) {\n      return normal.rotate(maxAngle)\n    }\n  }\n  return vector\n}\n\nexport const getNewGameState = (state, movement, timespan) => {\n  const { size, speed, lives } = state\n  const distance = timespan * DISTANCE_IN_MS * speed\n  const paddle = getNewPaddle(state.paddle, size, distance, movement)\n\n  const { radius } = state.ball\n  const oldDirection = state.ball.direction\n  const newBallCenter = state.ball.center.add(oldDirection.scaleBy(distance))\n  const ballBottom = newBallCenter.y + radius\n  if (ballBottom > size.height) {\n    return {\n      ...state,\n      ...getInitialPaddleAndBall(size.width, size.height, paddle.width),\n      lives: lives - 1\n    }\n  }\n\n  const withNewBallProps = props => ({\n    ...state,\n    paddle,\n    ball: {\n      ...state.ball,\n      ...props\n    }\n  })\n\n  const withNewBallDirection = normal => {\n    const distorted = getDistortedDirection(oldDirection.reflect(normal))\n    const direction = getAdjustedVector(normal, distorted)\n    return withNewBallProps({ direction })\n  }\n  const ballLeft = newBallCenter.x - radius\n  const ballRight = newBallCenter.x + radius\n  const ballTop = newBallCenter.y - radius\n  const paddleLeft = paddle.position.x\n  const paddleRight = paddleLeft + paddle.width\n  const paddleTop = paddle.position.y\n\n  const ballGoingDown = Math.abs(UP.angleBetween(oldDirection)) > 90\n  const hitPaddle = ballGoingDown && ballBottom >= paddleTop && ballRight >= paddleLeft && ballLeft <= paddleRight\n  if (hitPaddle) return withNewBallDirection(UP)\n  if (ballTop <= 0) return withNewBallDirection(DOWN)\n  if (ballLeft <= 0) return withNewBallDirection(RIGHT)\n  if (ballRight >= size.width) return withNewBallDirection(LEFT)\n\n  const block = state.blocks.find(({ position, width, height }) => (\n    isInBoundaries(ballTop, ballBottom, position.y, position.y + height) &&\n    isInBoundaries(ballLeft, ballRight, position.x, position.x + width)\n  ))\n  if (block) {\n    const density = block.density - 1\n    const newBlock = { ...block, density }\n    const blocks = density < 0 ? withoutElement(state.blocks, block) : updateElement(state.blocks, block, newBlock)\n\n    const getNewBallNormal = () => {\n      const blockTop = block.position.y\n      const blockBottom = blockTop + block.height\n      const blockLeft = block.position.x\n      if (ballTop > blockTop - radius && ballBottom < blockBottom + radius) {\n        if (ballLeft < blockLeft) return LEFT\n        if (ballRight > blockLeft + block.width) return RIGHT\n      }\n      if (ballTop > blockTop) return DOWN\n      if (ballTop <= blockTop) return UP\n    }\n    return {\n      ...withNewBallDirection(getNewBallNormal()),\n      blocks\n    }\n  }\n  return withNewBallProps({ center: newBallCenter })\n}","import React from 'react'\n\nexport default ({ level, unit }) => (\n  <text className='level' x={unit} y={unit * 2} fontSize={unit}>LEVEL: {level}</text>\n)","import React from 'react'\n\nimport { getRange } from '../utils'\n\nexport default ({ lives, containerWidth, unit }) => {\n  const width = unit * 2\n  return getRange(lives).map(i => (\n    <rect\n      className='life'\n      rx={unit / 4}\n      height={unit}\n      width={width}\n      y={unit}\n      x={containerWidth - unit - width * (i + 1) - (unit / 2) * i}\n      key={i}\n    />\n  ))\n}","import React from 'react'\n\nimport { getRange } from '../utils'\nimport { BLOCK_MAX_DENSITY } from '../game/levels'\n\nconst colors = getRange(BLOCK_MAX_DENSITY).map(i => `rgba(26, 188, 156, ${1 / (BLOCK_MAX_DENSITY - i)})`)\n\nexport default ({ x, y, width, height, density }) => (\n  <rect className='block' fill={colors[density]} x={x} y={y} width={width} height={height} />\n)","import React from 'react'\n\nexport default ({ x, y, width, height }) => (\n  <rect className='paddle' x={x} y={y} width={width} height={height} />\n)","import React from 'react'\n\nexport default ({ x, y, radius }) => (\n  <circle className='ball' cx={x} cy={y} r={radius} />\n)","import React, { useReducer, useEffect } from 'react'\n\nimport { LEVELS } from '../game/levels'\nimport { getGameStateFromLevel, MOVEMENT, getNewGameState } from '../game/core'\n\nimport Level from './level'\nimport Lives from './lives'\nimport Block from './block'\nimport Paddle from './paddle'\nimport Ball from './ball'\nimport { registerListener } from '../utils';\n\nconst MOVEMENT_KEYS = {\n  LEFT: [65, 37],\n  RIGHT: [68, 39]\n}\n\nconst STOP_KEY = 32\n\nconst UPDATE_EVERY = 1000 / 60\n\nconst ACTION = {\n  CONTAINER_SIZE_CHANGE: 'CONTAINER_SIZE_CHANGE',\n  KEY_DOWN: 'KEY_DOWN',\n  KEY_UP: 'KEY_UP',\n  TICK: 'TICK'\n}\n\nconst HANDLER = {\n  [ACTION.CONTAINER_SIZE_CHANGE]: (state, containerSize) => ({\n    ...state,\n    containerSize,\n    ...getProjectors(containerSize, state.game.size)\n  }),\n  [ACTION.KEY_DOWN]: (state, key) => {\n    if (MOVEMENT_KEYS.LEFT.includes(key)) {\n      return { ...state, movement: MOVEMENT.LEFT }\n    } else if (MOVEMENT_KEYS.RIGHT.includes(key)) {\n      return { ...state, movement: MOVEMENT.RIGHT}\n    }\n    return state\n  },\n  [ACTION.KEY_UP]: (state, key) => {\n    const newState = { ...state, movement: undefined }\n    if (key === STOP_KEY) {\n      if (state.stopTime) {\n        return { ...newState, stopTime: undefined, time: state.time + Date.now() - state.stopTime }\n      } else {\n        return { ...newState, stopTime: Date.now() }\n      }\n    }\n    return newState\n  },\n  [ACTION.TICK]: state => {\n    if (state.stopTime) return state\n    \n    const time = Date.now()\n    const newGame = getNewGameState(state.game, state.movement, time - state.time)\n    const newState = { ...state, time }\n    if (newGame.lives < 1) {\n      return { ...newState, game: getGameStateFromLevel(LEVELS[state.level])}\n    } else if (newGame.blocks.length < 1) {\n      const level = state.level === LEVELS.length ? state.level : state.level + 1\n      localStorage.setItem('level', level)\n      const game = getGameStateFromLevel(LEVELS[state.level])\n      return {\n        ...newState,\n        level,\n        game,\n        ...getProjectors(state.containerSize, game.size)\n      }\n    }\n    return { ...newState, game: newGame }\n  }\n}\n\nconst getInitialLevel = () => {\n  const inState = localStorage.getItem('level')\n  return inState ? parseInt(inState, 10) : 0\n}\n\nconst getProjectors = (containerSize, gameSize) => {\n  const widthRatio = containerSize.width / gameSize.width\n  const heightRatio = containerSize.height / gameSize.height\n  const unitOnScreen = Math.min(widthRatio, heightRatio)\n\n  return {\n    projectDistance: distance => distance * unitOnScreen,\n    projectVector: vector => vector.scaleBy(unitOnScreen)\n  }\n}\n\nconst getInitialState = containerSize => {\n  const level = getInitialLevel()\n  const game = getGameStateFromLevel(LEVELS[level])\n  const { projectDistance, projectVector } = getProjectors(containerSize, game.size)\n  return {\n    level,\n    game,\n    containerSize,\n    projectDistance,\n    projectVector,\n    time: Date.now(),\n    stopTime: undefined,\n    movement: undefined\n  }\n}\n\nconst reducer = (state, { type, payload }) => {\n  const handler = HANDLER[type]\n  if (!handler) return state\n  return handler(state, payload)\n}\n\nexport default (containerSize) => {\n  const [state, dispatch] = useReducer(reducer, containerSize, getInitialState)\n  const act = (type, payload) => dispatch({ type, payload })\n  const {\n    projectDistance,\n    projectVector,\n    level,\n    game: {\n      blocks,\n      paddle,\n      ball,\n      size: {\n        width,\n        height\n      },\n      lives\n    }\n  } = state\n\n  useEffect(() => act(ACTION.CONTAINER_SIZE_CHANGE, containerSize), [containerSize])\n  useEffect(() => {\n    const onKeyDown = ({ which }) => act(ACTION.KEY_DOWN, which)\n    const onKeyUp = ({ which }) => act(ACTION.KEY_UP, which)\n    const tick = () => act(ACTION.TICK)\n\n    const timerId = setInterval(tick, UPDATE_EVERY)\n    const unregisterKeydown = registerListener('keydown', onKeyDown)\n    const unregisterKeyup = registerListener('keyup', onKeyUp)\n\n    return () => {\n      clearInterval(timerId)\n      unregisterKeydown()\n      unregisterKeyup()\n    }\n  }, [])\n\n  const viewWidth = projectDistance(width)\n  const unit = projectDistance(ball.radius)\n\n  return (\n    <svg width={viewWidth} height={projectDistance(height)} className='scene'>\n      <Level unit={unit} level={level + 1}/>\n      <Lives\n        lives={lives}\n        containerWidth={viewWidth}\n        unit={unit}\n      />\n      {blocks.map(({ density, position, width, height }) => (\n        <Block\n          density={density}\n          key={`${position.x}-${position.y}`}\n          width={projectDistance(width)}\n          height={projectDistance(height)}\n          {...projectVector(position)}\n        />\n      ))}\n      <Paddle\n        width={projectDistance(paddle.width)}\n        height={projectDistance(paddle.height)}\n        {...projectVector(paddle.position)}\n      />\n      <Ball {...projectVector(ball.center)} radius={unit} />\n    </svg>\n  )\n}","import Page from './components/page'\n\nexport default Page\n","import React, { useRef, useEffect, useState } from 'react'\n\nimport Scene from './scene'\nimport { registerListener } from '../utils'\n\nexport default () => {\n  const sceneContainer = useRef()\n  const [size, setSize] = useState()\n\n  useEffect(() => {\n    const onResize = () => {\n      const { width, height } = sceneContainer.current.getBoundingClientRect()\n      setSize({ width, height })\n    }\n    const unregisterResizeListener = registerListener('resize', onResize)\n    onResize()\n    return unregisterResizeListener\n  }, [])\n\n  return (\n    <div className='page'>\n      <div className='scene-container' ref={sceneContainer}>\n        {size && <Scene {...size} />}\n      </div>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}