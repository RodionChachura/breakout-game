{"version":3,"sources":["utils.js","game/levels.js","game/vector.js","game/core.js","components/block.js","components/paddle.js","components/ball.js","components/level.js","components/lives.js","components/scene.js","App.js","components/page.js","serviceWorker.js","index.js"],"names":["getRange","length","Object","toConsumableArray","Array","keys","registerListener","eventName","handler","window","addEventListener","removeEventListener","getRandomBlock","Math","floor","random","getBlocks","rows","columns","map","LEVELS","lives","paddleWidth","speed","blocks","Vector","x","y","classCallCheck","this","_ref","_ref2","number","hypot","scaleBy","_ref3","other","amt","dotProduct","normal","subtract","projectOn","degrees","radians","PI","toRadians","cos","sin","_ref4","atan2","crossProduct","MOVEMENT","LEFT","RIGHT","DOWN","UP","LEFT_UP","add","normalize","RIGHT_UP","getRandomFrom","_len","arguments","args","_key","getInitialPaddleAndBall","width","height","paddleY","paddle","position","ball","center","BALL_RADIUS","radius","direction","isInBoundaries","oneSide","otherSide","oneBoundary","otherBoundary","getNewGameState","state","movement","timespan","size","distance","withNewX","objectSpread","getNewPaddle","oldDirection","newBallCenter","ballBottom","withNewBallProps","props","withNewBallDirection","vector","minAngle","undefined","angle","angleBetween","maxAngle","rotate","getAdjustedVector","distortionLevel","getComponent","distortion","getDistortedDirection","reflect","ballLeft","ballRight","ballTop","paddleLeft","paddleRight","paddleTop","abs","array","element","block","find","density","newBlock","filter","e","oldElement","newElement","updateElement","blockTop","blockBottom","blockLeft","getNewBallNormal","DENSITY_COLORS","components_block","react_default","a","createElement","className","fill","components_paddle","components_ball","cx","cy","r","components_level","level","unit","fontSize","components_lives","containerWidth","i","rx","key","MOVEMENT_KEYS","getProjectors","containerSize","gameSize","widthRatio","heightRatio","unitOnScreen","min","projectDistance","projectVector","initialStates","arrays","blocksStart","rowsOfBlocks","row","j","reduce","acc","concat","ACTION","HANDLER","_HANDLER","defineProperty","game","includes","newState","stopTime","time","Date","now","newGame","localStorage","setItem","reducer","type","payload","getInitialState","inState","getItem","parseInt","getInitialLevel","_getProjectors","scene","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","act","_state$game","_state$game$size","useEffect","timerId","setInterval","unregisterKeydown","which","unregisterKeyup","clearInterval","viewWidth","assign","Page","svgElement","useRef","_useState","useState","_useState2","setSize","onResize","_svgElement$current$g","current","getBoundingClientRect","unregisterResizeListener","ref","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e560c959.chunk.js","sourcesContent":["export const toDegrees = radians => (radians * 180) / Math.PI\nexport const toRadians = degrees => (degrees * Math.PI) / 180\n\nexport const getRange = length => [...Array(length).keys()]\nexport const flatten = arrays => arrays.reduce((acc, row) => [...acc, ...row], [])\nexport const withoutElement = (array, element) => array.filter(e => e !== element)\nexport const updateElement = (array, oldElement, newElement) => array.map(e => e === oldElement ? newElement : e)\n\nexport const registerListener = (eventName, handler) => {\n  window.addEventListener(eventName, handler)\n  return () => window.removeEventListener(eventName, handler)\n}","import { getRange } from '../utils'\n\nconst BLOCK_MAX_DENSITY = 3\n\nconst getRandomBlock = () => Math.floor(Math.random() * BLOCK_MAX_DENSITY)\n\nconst getBlocks = (rows, columns) =>\n  getRange(columns).map(() => getRange(rows).map(getRandomBlock))\n\nexport const LEVELS = [\n  {\n    lives: 5,\n    paddleWidth: 3.5,\n    speed: 1,\n    blocks: getBlocks(6, 3)\n  },\n  {\n    lives: 4,\n    paddleWidth: 3,\n    speed: 1.4,\n    blocks: getBlocks(7, 4)\n  },\n  {\n    lives: 3,\n    paddleWidth: 2.5,\n    speed: 1.8,\n    blocks: getBlocks(8, 5)\n  },\n  {\n    lives: 3,\n    paddleWidth: 2,\n    speed: 2.2,\n    blocks: getBlocks(9, 6)\n  },\n]","import { toDegrees, toRadians } from '../utils'\n\nexport default class Vector {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  add({ x, y }) {\n    return new Vector(this.x + x, this.y + y)\n  }\n\n  subtract({ x, y }) {\n    return new Vector(this.x - x, this.y - y)\n  }\n\n  scaleBy(number) {\n    return new Vector(this.x * number, this.y * number);\n  }\n\n  length() {\n    return Math.hypot(this.x, this.y)\n  }\n\n  normalize() {\n    return this.scaleBy(1 / this.length())\n  }\n\n  dotProduct({ x, y }) {\n    return this.x * x + this.y * y\n  }\n\n  projectOn(other) {\n    const amt = this.dotProduct(other) / other.length()\n    return new Vector(amt * other.x, amt * other.y)\n  }\n\n  reflect(normal) {\n    return this.subtract(this.projectOn(normal).scaleBy(2))\n  }\n\n  rotate(degrees) {\n    const radians = toRadians(degrees)\n    const cos = Math.cos(radians)\n    const sin = Math.sin(radians)\n\n    return new Vector(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos\n    )\n  }\n\n  crossProduct({ x, y }) {\n    return this.x * y - x * this.y\n  }\n\n  angleBetween(other) {\n    return toDegrees(\n      Math.atan2(this.crossProduct(other), this.dotProduct(other))\n    )\n  }\n}","import Vector from './vector'\nimport { flatten, withoutElement, updateElement } from '../utils'\n\nconst PADDLE_AREA = 1 / 3\nconst BLOCK_HEIGHT = 1 / 3\nconst PADDLE_HEIGHT = BLOCK_HEIGHT\nconst BALL_RADIUS = 1 / 5\nconst DISTANCE_IN_MS = 0.005\n\nexport const MOVEMENT = {\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT'\n}\n\nconst LEFT = new Vector(-1, 0)\nconst RIGHT = new Vector(1, 0)\nconst DOWN = new Vector(0, 1)\nconst UP = new Vector(0, -1)\n\nconst LEFT_UP = LEFT.add(UP).normalize()\nconst RIGHT_UP = RIGHT.add(UP).normalize()\n\nconst getRandomFrom = (...args) => args[Math.floor(Math.random() * args.length)]\n\nexport const getInitialPaddleAndBall = (width, height, paddleWidth) => {\n  const paddleY = height - PADDLE_HEIGHT\n  const paddle = {\n    position: new Vector((width - paddleWidth) / 2, paddleY),\n    width: paddleWidth,\n    height: PADDLE_HEIGHT\n  }\n  const ball = {\n    center: new Vector(height / 2, paddleY - BALL_RADIUS * 2),\n    radius: BALL_RADIUS,\n    direction: getRandomFrom(LEFT_UP, RIGHT_UP)\n  }\n\n  return {\n    paddle,\n    ball\n  }\n}\n\nexport const getGameStateFromLevel = ({ lives, paddleWidth, speed, blocks }) => {\n  const width = blocks[0].length\n  const height = width\n\n  const blocksStart = ((height - height * PADDLE_AREA) - blocks.length * BLOCK_HEIGHT) / 2\n\n  const rowsOfBlocks = blocks.map((row, i) =>\n    row.map((density, j) => ({\n      density,\n      position: new Vector(j, blocksStart + (i * BLOCK_HEIGHT)),\n      width: 1,\n      height: BLOCK_HEIGHT\n    })\n  ))\n\n  const size = {\n    width,\n    height\n  }\n  return {\n    size,\n    blocks: flatten(rowsOfBlocks),\n    ...getInitialPaddleAndBall(width, height, paddleWidth),\n    lives,\n    speed\n  }\n}\n\nconst getDistortedDirection = (vector, distortionLevel = 0.3) => {\n  const getComponent = () => Math.random() * distortionLevel - distortionLevel / 2\n  const distortion = new Vector(getComponent(), getComponent())\n  return vector.add(distortion).normalize()\n}\n\nconst getNewPaddle = (paddle, size, distance, movement) => {\n  if (!movement) return paddle\n  const direction = movement === MOVEMENT.LEFT ? LEFT : RIGHT\n\n  const { x } = paddle.position.add(direction.scaleBy(distance))\n  const withNewX = x => ({\n    ...paddle,\n    position: new Vector(x, paddle.position.y)\n  })\n  if (x < 0) {\n    return withNewX(0)\n  }\n  if (x + paddle.width > size.width) {\n    return withNewX(size.width - paddle.width)\n  }\n  return withNewX(x)\n}\n\nconst isInBoundaries = (oneSide, otherSide, oneBoundary, otherBoundary) => (\n  (oneSide >= oneBoundary && oneSide <= otherBoundary) ||\n  (otherSide >= oneBoundary && otherSide <= otherBoundary)\n)\n\nconst getAdjustedVector = (normal, vector, minAngle = 15) => {\n  const angle = normal.angleBetween(vector)\n  const maxAngle = 90 - minAngle\n  if (angle < 0) {\n    if (angle > -minAngle) {\n      return normal.rotate(-minAngle)\n    }\n    if (angle < -maxAngle) {\n      return normal.rotate(-maxAngle)\n    }\n  } else {\n    if (angle < minAngle) {\n      return normal.rotate(minAngle)\n    }\n    if (angle > maxAngle) {\n      return normal.rotate(maxAngle)\n    }\n  }\n  return vector\n}\n\nexport const getNewGameState = (state, movement, timespan) => {\n  const { size, speed, lives } = state\n  const distance = timespan * DISTANCE_IN_MS * speed\n  const paddle = getNewPaddle(state.paddle, size, distance, movement)\n\n  const { radius } = state.ball\n  const oldDirection = state.ball.direction\n  const newBallCenter = state.ball.center.add(oldDirection.scaleBy(distance))\n  const ballBottom = newBallCenter.y + radius\n  if (ballBottom > size.height) {\n    return {\n      ...state,\n      ...getInitialPaddleAndBall(size.width, size.height, paddle.width),\n      lives: lives - 1\n    }\n  }\n  \n  const withNewBallProps = props => ({\n    ...state,\n    paddle,\n    ball: {\n      ...state.ball,\n      ...props\n    }\n  })\n\n  const withNewBallDirection = normal => {\n    const distorted = getDistortedDirection(oldDirection.reflect(normal))\n    const direction = getAdjustedVector(normal, distorted)\n    return withNewBallProps({ direction })\n  }\n  const ballLeft = newBallCenter.x - radius\n  const ballRight = newBallCenter.x + radius\n  const ballTop = newBallCenter.y - radius\n  const paddleLeft = paddle.position.x\n  const paddleRight = paddleLeft+ paddle.width\n  const paddleTop = paddle.position.y\n\n  const ballGoingDown = Math.abs(UP.angleBetween(oldDirection)) > 90\n  const hitPaddle = ballGoingDown && ballBottom >= paddleTop && ballRight >= paddleLeft && ballLeft <= paddleRight\n  if (hitPaddle) return withNewBallDirection(UP)\n  if (ballTop <= 0) return withNewBallDirection(DOWN)\n  if (ballLeft <= 0) return withNewBallDirection(RIGHT)\n  if (ballRight >= size.width) return withNewBallDirection(LEFT)\n\n  const block = state.blocks.find(({ position, width, height }) => (\n    isInBoundaries(ballTop, ballBottom, position.y, position.y + height) &&\n    isInBoundaries(ballLeft, ballRight, position.x, position.x + width) \n  ))\n  if (block) {\n    const density = block.density - 1\n    const newBlock = { ...block, density }\n    const blocks = density < 0 ? withoutElement(state.blocks, block) : updateElement(state.blocks, block, newBlock)\n    \n    const getNewBallNormal = () => {\n      const blockTop = block.position.y\n      const blockBottom = blockTop + block.height\n      const blockLeft = block.position.x\n      if (ballTop > blockTop - radius && ballBottom < blockBottom + radius) {\n        if (ballLeft < blockLeft) return LEFT\n        if (ballRight > blockLeft + block.width) return RIGHT\n      }\n      if (ballTop > blockTop) return DOWN\n      if (ballTop <= blockTop) return UP\n    }\n    return {\n      ...withNewBallDirection(getNewBallNormal()),\n      blocks\n    }\n  }\n  return withNewBallProps({ center: newBallCenter })\n}","import React from 'react'\n\nconst DENSITY_COLORS = [\n  '#f1c40f',\n  '#9b59b6',\n  '#95a5a6'\n]\n\nexport default ({ x, y, width, height, density }) => (\n  <rect className='block' fill={DENSITY_COLORS[density]} x={x} y={y} width={width} height={height} />\n)\n","import React from 'react'\n\nexport default ({ x, y, width, height }) => (\n  <rect className='paddle' x={x} y={y} width={width} height={height} />\n)","import React from 'react'\n\nexport default ({ x, y, radius }) => (\n  <circle className='ball' cx={x} cy={y} r={radius} />\n)","import React from 'react'\n\nexport default ({ level, unit }) => {\n  return (\n    <text x={unit} y={unit * 2} fontSize={unit} className='level'>LEVEL: {level}</text>\n  )\n}","import React from 'react'\n\nimport { getRange } from '../utils'\n\nexport default ({ lives, containerWidth, unit }) => {\n  const width = unit * 2\n  return getRange(lives).map(i => (\n    <rect\n      className='life'\n      rx={unit / 4}\n      height={unit}\n      width={width}\n      y={unit}\n      x={containerWidth - unit - width * (i + 1) - (unit / 2) * i}\n      key={i}\n    />\n  ))\n}","import React, { useEffect, useReducer } from 'react'\n\nimport { LEVELS } from '../game/levels'\nimport { MOVEMENT, getNewGameState, getGameStateFromLevel } from '../game/core'\n\nimport Block from './block'\nimport Paddle from './paddle'\nimport Ball from './ball'\nimport Level from './level'\nimport Lives from './lives'\nimport { registerListener } from '../utils';\n\nconst MOVEMENT_KEYS = {\n  LEFT: [65, 37],\n  RIGHT: [68, 39]\n}\n\nconst STOP_KEY = 32\n\nconst UPDATE_EVERY = 1000 / 60\n\nconst getProjectors = (containerSize, gameSize) => {\n  const widthRatio = containerSize.width / gameSize.width\n  const heightRatio = containerSize.height / gameSize.height\n  const unitOnScreen = Math.min(widthRatio, heightRatio)\n\n  return {\n    projectDistance: distance => distance * unitOnScreen,\n    projectVector: vector => vector.scaleBy(unitOnScreen)\n  }\n}\n\nconst initialStates = LEVELS.map(getGameStateFromLevel)\n\nconst getInitialLevel = () => {\n  const inState = localStorage.getItem('level')\n  return inState ? parseInt(inState, 10) : 0\n}\n\nconst ACTION = {\n  CONTAINER_SIZE_CHANGE: 'CONTAINER_SIZE_CHANGE',\n  KEY_DOWN: 'KEY_DOWN',\n  KEY_UP: 'KEY_UP',\n  TICK: 'TICK'\n}\n\nconst HANDLER = {\n  [ACTION.CONTAINER_SIZE_CHANGE]: (state, containerSize) => ({\n    ...state,\n    containerSize,\n    ...getProjectors(containerSize, state.game.size)\n  }),\n  [ACTION.KEY_DOWN]: (state, key) => {\n    if (MOVEMENT_KEYS.LEFT.includes(key)) {\n      return { ...state, movement: MOVEMENT.LEFT }\n    } else if (MOVEMENT_KEYS.RIGHT.includes(key)) {\n      return { ...state, movement: MOVEMENT.RIGHT }\n    }\n    return state\n  },\n  [ACTION.KEY_UP]: (state, key) => {\n    const newState = { ...state, movement: undefined }\n    if (key === STOP_KEY) {\n      if (state.stopTime) {\n        return { ...newState, stopTime: undefined, time: state.time + Date.now() - state.stopTime}\n      } else {\n        return { ...newState, stopTime: Date.now() }\n      }\n    }\n    return newState\n  },\n  [ACTION.TICK]: state => {\n    if (state.stopTime) return state\n\n    const time = Date.now()\n    const newGame = getNewGameState(state.game, state.movement, time - state.time)\n    const newState = { ...state, time }\n    if (newGame.lives < 1) {\n      return { ...newState, game: initialStates[state.level] }\n    } else if (newGame.blocks.length < 1) {\n      const level = state.level === initialStates.length ? state.level : state.level + 1\n      localStorage.setItem('level', level)\n      const game = initialStates[level]\n      return {\n        ...newState,\n        level,\n        game,\n        ...getProjectors(state.containerSize, game.size)\n      }\n    }\n    return { ...newState, game: newGame }\n  }\n}\n\nconst reducer = (state, { type, payload }) => {\n  const handler = HANDLER[type]\n  if (!handler) return state\n  return handler(state, payload)\n}\n\nconst getInitialState = containerSize => {\n  const level = getInitialLevel()\n  const game = initialStates[level]\n  const { projectDistance, projectVector } = getProjectors(containerSize, game.size)\n  return {\n    level,\n    game,\n    containerSize,\n    projectDistance,\n    projectVector,\n    time: Date.now(),\n    stopTime: undefined,\n    movement: undefined\n  }\n}\n\nexport default (containerSize) => {\n  const [state, dispatch] = useReducer(reducer, containerSize, getInitialState)\n  const act = (type, payload) => dispatch({ type, payload })\n  const {\n    projectDistance,\n    projectVector,\n    level,\n    game: {\n      blocks,\n      paddle,\n      ball,\n      size: {\n        width,\n        height\n      },\n      lives\n    }\n  } = state\n  \n  useEffect(() => act(ACTION.CONTAINER_SIZE_CHANGE, containerSize), [containerSize])\n\n  useEffect(() => {\n    const onKeyDown = ({ which }) => act(ACTION.KEY_DOWN, which)\n    const onKeyUp = ({ which }) => act(ACTION.KEY_UP, which)\n    const tick = () => act(ACTION.TICK)\n\n    const timerId = setInterval(tick, UPDATE_EVERY)\n    const unregisterKeydown = registerListener('keydown', onKeyDown)\n    const unregisterKeyup = registerListener('keyup', onKeyUp)\n    return () => {\n      clearInterval(timerId)\n      unregisterKeydown()\n      unregisterKeyup()\n    }\n  }, [])\n  const viewWidth = projectDistance(width)\n  const unit = projectDistance(ball.radius)\n  return (\n    <svg width={viewWidth} height={projectDistance(height)} className='scene'>\n      <Level unit={unit} level={level + 1} />\n      <Lives\n        lives={lives}\n        containerWidth={viewWidth}\n        unit={unit}\n      />\n      {blocks.map(({ density, position, width, height }) => (\n        <Block\n          density={density}\n          key={`${position.x}-${position.y}`}\n          width={projectDistance(width)}\n          height={projectDistance(height)}\n          {...projectVector(position)}\n        />)\n      )}\n      <Paddle width={projectDistance(paddle.width)} height={projectDistance(paddle.height)} {...projectVector(paddle.position)} />\n      <Ball {...projectVector(ball.center)} radius={unit} />\n    </svg>\n  )\n}","import Page from './components/page'\n\nexport default Page\n","import React, { useRef, useEffect, useState } from 'react'\n\nimport Scene from './scene'\nimport { registerListener } from '../utils'\n\nexport default () => {\n  const svgElement = useRef()\n  const [size, setSize] = useState()\n\n  const onResize = () => {\n    const { width, height } = svgElement.current.getBoundingClientRect()\n    setSize({ width, height })\n  }\n\n  useEffect(() => {\n    const unregisterResizeListener = registerListener('resize', onResize)\n    onResize()\n    return unregisterResizeListener\n  }, [])\n\n  return (\n    <div className='page'>\n      <div className='scene-container' ref={svgElement}>\n        {size && <Scene width={size.width} height={size.height} />}\n      </div>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}